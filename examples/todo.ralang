app Todo {
	title: "Todo App Created by Ra",
	auth: {
		userModel: User,
		idField: id,
		usernameField: username,
		passwordField: password,
		onSuccessRedirectTo: "/",
		onFailRedirectTo: "/login"
	}
}

model User {
	id        Int     @id
	username  String  @unique
	password  String
	tasks 		Task[]
}

model Task {
	id        Int      @id
	title     String
	isDone    Boolean  @default(false)
	user 			User 		 @relation(userId, id)
	userId		Int
	createdAt DateTime @default(Now)
	updatedAt DateTime @updatedAt
}

@on(Task)
@permission(IsAuth, OwnsEntry)
query<FindMany> getTasks {
	search: [ title, isDone ]
}

@on(Task)
@permission(IsAuth, OwnsEntry)
query<FindUnique> getTaskById {
	where: [ id ]
}

@on(Task)
@permission(IsAuth)
query<Create> createTask {
	data: {
		fields: [title],
		relationFields: {
			user: connect id with userId
		}
	}
}

@on(Task)
@permission(IsAuth, OwnsEntry)
query<Update> updateTaskById {
	where: [ id ],
	data: [ title, isDone ]
}

@on(Task)
@permission(IsAuth, OwnsEntry)
query<Delete> deleteTaskById {
	where: [ id ]
}

component<Create> TaskCreateForm {
	formInputs: {
		title: {
			input: {
				type: TextInput,
				placeholder: "Enter title",
				isVisible: true,
				style: "shadow appearance-none border rounded w-full border py-2 px-3 text-gray-700 leading-tight"
			}
		},
		user: {
			input: {
				type: RelationInput,
				isVisible: false,
				defaultValue: connect id with LoggedInUser.id
			}
		}
	},
	formButton: {
		name: "Create",
		style: "ml-2 py-2 px-3 text-white bg-green-500 rounded-md"
	}
}

component<Delete> TaskDeleteButton(id: Int) {
	formButton: {
		name: "Delete"
	}
}

component TaskComponent(task: Task) {
	render(
		<div className="text-gray-900">
			<div>{ task.title }</div>
			<div>{ task.createdAt }</div>
			<TaskDeleteButton id={task.id} />
		</div>
	)
}

component<FindMany> TasksComponent {
	findQuery: getMessages as messages,
	onError: render(
		<div>{ "An error occured" }</div>
	),
	onLoading: render(
		<div>{ "Loading..." }</div>
	),
	onSuccess: render(
		<>
				[% for task in tasks %]
					<>
						<TaskComponent task={ task } />
						<div className="border-y border-black"></div>
					</>
				[% endfor %]
		</>
	)
}

component<SignupForm> SignupForm {
	style: "space-y-2",
	formInputs: {
		username: {
			input: {
				type: TextInput,
				isVisible: true,
				placeholder: "Enter username"
			}
		},
		password: {
			input: {
				type: PasswordInput,
				isVisible: true,
				placeholder: "Enter password"
			}
		}
	},
	formButton: {
		name: "Sign Up",
		style: "ml-2 py-2 px-3 text-white bg-green-500 rounded-md"
	}
}

component<LoginForm> LoginForm {
	style: "space-y-2",
	formInputs: {
		username: {
			input: {
				type: TextInput,
				isVisible: true,
				placeholder: "Enter username"
			}
		},
		password: {
			input: {
				type: PasswordInput,
				isVisible: true,
				placeholder: "Enter password"
			}
		}
	},
	formButton: {
		name: "Login",
		style: "ml-2 py-2 px-3 text-white bg-green-500 rounded-md"
	}
}

component<LogoutButton> LogoutButton {
	formButton: {
		name: "Logout"
	}
}

@at("/")
page Home {
	render(
		<div className="flex h-screen items-center justify-center bg-slate-800">
			<div className="text-white">{ "Home Page" }</div>
		</div>
	)
}

@at("/tasks")
@permission(IsAuth)
page Tasks {
	render(
		<div className="flex h-screen items-center justify-center bg-slate-800">
			<div className="px-40 py-14 rounded-xl bg-white">
				<TaskCreateForm />
				<div className="py-2"></div>
				<div className="font-bold text-size-[24px] py-2">{ "Tasks" }</div>
				<TasksComponent />
			</div>
		</div>
	)
}

@at("/login")
page LoginPage {
	render(
		<div className="flex h-screen items-center justify-center bg-slate-800">
			<div className="space-y-2">
				<span className="text-xl text-white">{"Login form"}</span>
				<LoginForm/>
			</div>
		</div>
	)
}

@at("/signup")
page SignupPage {
	render(
		<div className="flex h-screen items-center justify-center bg-slate-800">
			<div className="space-y-2">
				<span className="text-xl text-white">{"Sign up form"}</span>
				<SignupForm/>
			</div>
		</div>
	)
}
