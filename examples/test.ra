model User {
	id        Int     @id
	firstName String
	lastName  String
}

model Task {
	id        Int      @id
	title     String
	isDone    Boolean  @default(false)
	createdAt DateTime @default(now)
	updatedAt DateTime @updatedAt
}

@on(Task)
@permission(isAuth)
query<findMany> getTasks(filter: { title, isDone })

@on(Task)
@permission(isAuth)
query<create> createTask(data: { title })

@on(Task)
@permission(isAuth)
query<findUnique> getTaskById(where: id)

@on(Task)
@permission(isAuth, owns)
query<update> updateTaskById(where: id, data: { title, isDone })

@on(Task)
@permission(isAuth, owns)
query<delete> deleteTaskById(where: id)

component TaskView(task) {
	render(
		<div className="text-blue-500 pb-2 divide-black">
			<div></div>
		</div>
	)
}

@at("/")
@permission(isAuth)
page Home {
	let tasks = getTasks()

	render(
		<div>
			{
				if tasks then
					for task in tasks =>
						<div>
							<div>{ "task dsalkkkfasd fjadsklfjads" }</div>
						</div>
				else
					<div>{ "There are no tasks" }</div>
			}
		</div>
	)
}
