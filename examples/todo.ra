app Todo {
	title: "Todo App Created by Ra",
	auth: {
		userModel: User,
		idField: id,
		usernameField: username,
		passwordField: password,
		signupForm: SignupFrom,
		loginForm: LoginForm,
		logoutButton: LogoutButton,
		onAuthFailedRedirectTo: "/login"
	}
}

model User {
	id        Int     @id
	username  String  @unique
	password  String
	firstName String
	lastName  String
}

model TaskTest {
	id        Int      @id
	title     String
	isDone    Boolean  @default(false)
	createdAt DateTime @default(now)
	updatedAt DateTime @updatedAt
}

@on(TaskTest)
@permission(isAuthenticated)
query<findMany> getTasks : TaskTest[] {
	search: { title, isDone }
}

@on(TaskTest)
@permission(isAuthenticated)
query<findUnique> getTaskById {
	where: { id }
}

@on(TaskTest)
@permission(isAuthenticated)
query<create> createTask {
	data: {
		title
	}
}

@on(TaskTest)
@permission(isAuthenticated, ownsEntry)
query<update> updateTaskById {
	where: { id },
	data: { title, isDone }
}

@on(TaskTest)
@permission(isAuthenticated, ownsEntry)
query<delete> deleteTaskById {
	where: { id }
}

component TaskComponent(task: TaskTest) {
	render(
		<div className="text-gray-900">
			<div>{ task.title }</div>
			<div>{ task.createdAt }</div>
		</div>
	)
}

component<findMany:getTasks as tasks> TasksComponent {
	onError: render(
		<div>{ "An error occured" }</div>
	)

	onLoading: render(
		<div>{ "Loading..." }</div>
	)

	onSuccess: render(
		<>
			{
				for task in tasks: (
					<>
						<TaskComponent task={ task } />
						<div className="border-y border-black"></div>
					</>
				)
			}
		</>
	)
}

component<create:createTask> TaskCreateForm {
	formFields: {
		title: {
			type: TextField,
			isVisible: true,
			style: "shadow appearance-none border rounded w-full border py-2 px-3 text-gray-700 leading-tight"
		}
	},

	formButton: {
		name: "Create",
		style: "ml-2 py-2 px-3 text-white bg-green-500 rounded-md"
	}
}

component<delete:deleteTaskById> TaskDeleteButton {
	formButton: {
		name: "Delete"
	}
}

@at("/")
@permission(isAuthenticated)
page Home {
	render(
		<div className="flex h-screen items-center justify-center bg-slate-800">
			<div className="px-40 py-14 rounded-xl bg-white">
				<TaskCreateForm />
				<div className="py-2"></div>
				<div className="font-bold text-size-[24px] py-2">{ "Tasks" }</div>
				<TasksComponent />
			</div>
		</div>
	)
}
