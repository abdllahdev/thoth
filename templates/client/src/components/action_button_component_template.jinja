{% if type == "logout" %}
import { useEffect, useState } from "react";
import { useNavigate } from "react-router";
import { User } from "@/types";
{% endif %}
{% if requires_auth %}
import { useState } from "react";
import { User } from "@/types";
{% endif %}
{% for imported_type in imported_types %}
import { {{ imported_type }} } from "@/types"
{% endfor %}
import Button from "@/ui/Button";

{% if type != "logout" %}
const baseUrl = "http://localhost:4000";
{% endif %}

{% if args %}
type {{ id }}Props = {
  {% for arg in args %}
  {{ arg.id }}{{ arg.type }};
  {% endfor %}
}
{% endif %}

const {{ id }} = ({% if args %} { {% for arg in args %}{{ arg.id }},{% endfor %} }: {{ id }}Props {% endif %}) => {
    {% if type == "delete" %}
    const url = `${baseUrl}/{{ post_to }}/${ {{args[0].id}} }`;
    {% if requires_auth %}
    const storedUser = localStorage.getItem("LoggedInUser");
    const [LoggedInUser, _] = useState<User | undefined>(
      storedUser ? (JSON.parse(storedUser) as User) : undefined
    );
    {% endif %}
  {% endif %}

  {% if type == "logout" %}
  const navigate = useNavigate();
  const storedUser = localStorage.getItem("LoggedInUser")
    ? JSON.parse(localStorage.getItem("LoggedInUser") as string)
    : undefined;
  const [LoggedInUser, setUser] = useState<User | undefined>(storedUser);

  useEffect(() => {
    if (!LoggedInUser) {
      navigate("{{ on_fail_redirect_to }}");
    }
  }, [LoggedInUser]);
  {% endif %}

  const handleOnClick = async () => {
    {% if type == "logout" %}
    localStorage.removeItem("LoggedInUser");
    setUser(undefined);
    {% else %}
    await fetch(url, {
      method: "DELETE",
      {% if requires_auth %}
      headers: {
        Authorization: `Bearer ${LoggedInUser?.accessToken}`
      }
      {% endif %}
    });
    {% endif %}
  };

  return (
    <>
      <Button
        handleOnClick={{ "{" }}handleOnClick{{ "}" }}
        {% for attr in form_button %}
          {{ attr.name }}="{{ attr.value }}"
        {% endfor %}
      />
    </>
  );
};

export default {{ id }};
